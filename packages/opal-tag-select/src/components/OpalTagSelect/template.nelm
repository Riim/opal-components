@section/inner {

span/tags {
	@Repeat (for=tag of viewModel, trackBy={_viewModelItemValueFieldName}) {
		span/tag (
			data-value='{tag |key(_viewModelItemValueFieldName) }',
			disabled='{tag |_isItemDisabled }'
		) {
			'{tag |key(_viewModelItemTextFieldName) }'
			button/btnRemoveTag (data-tag-value='{tag |key(_viewModelItemValueFieldName) }')
		}
	}
}

span/control {
	@IfThen (if=isPlaceholderShown) {
		span/placeholder {
			'{paramPlaceholder} '
		}
	}

	OpalSelect/select (
		viewType=clean,
		multiple,
		dataListKeypath={_dataListKeypathParam},
		dataListItemSchema={paramDataListItemSchema |dump },
		value={paramValue},
		viewModel={viewModel},
		viewModelItemSchema={paramViewModelItemSchema |dump },
		addNewItem={paramAddNewItem},
		focused={paramFocused}
	) {
		OpalSignButton/button (
			class=OpalSelect__button,
			sign=plus,
			checkable,
			tabIndex_={paramTabIndex_},
			disabled={paramDisabled}
		)

		RtSlot (class=OpalSelect__menuSlot, for=OpalSelect__menu) {
			OpalPopover/menu (
				class=OpalSelect__menu,
				position={paramPopoverPosition},
				autoClosing
			) {
				RtSlot (for=OpalSelect__menuContent) {
					@IfThen (if=_dataListKeypathParam) {
						div (class=OpalSelect__menuContent) {
							@IfThen (if=dataList) {
								@Repeat (for=item of dataList) {
									OpalSelectOption/dataListSelectOption, selectOption (
										value='{item |key(_dataListItemValueFieldName) }',
										text='{item |key(_dataListItemTextFieldName) }',
										subtext='{item |key(_dataListItemSubtextFieldName) }',
										disabled='{item |key(_dataListItemDisabledFieldName) }'
									)
								}

								RtSlot (
									class=OpalSelect__newItemInputSlot,
									for=OpalSelect__newItemInput
								)
							}
							@IfElse (if=dataList) {
								OpalLoader/menuLoader (shown)
							}
						}
					}
					@IfElse (if=_dataListKeypathParam) {
						OpalFilteredList/menuFilteredList (
							class=OpalSelect__menuContent OpalSelect__filteredList
						) {
							RtSlot (
								class=OpalFilteredList__queryInputSlot,
								for=OpalFilteredList__queryInput
							)

							OpalLoadedList/menuLoadedList (
								class=OpalSelect__loadedList OpalFilteredList__list,
								dataProvider={dataProvider}
							) {
								OpalSelectOption/loadedListSelectOption, selectOption (
									class=OpalLoadedList__listItem,
									value='{$item |key(_dataListItemValueFieldName) }',
									text='{$item |key(_dataListItemTextFieldName) }',
									subtext='{$item |key(_dataListItemSubtextFieldName) }'
								)
							}
						}
					}
				}
			}
		}
	}
}

}